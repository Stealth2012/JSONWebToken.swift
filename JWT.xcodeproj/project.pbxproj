// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"JWT::JWTPackageTests::ProductTarget" /* JWTPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_91 /* Build configuration list for PBXAggregateTarget "JWTPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_94 /* PBXTargetDependency */,
				OBJ_95 /* PBXTargetDependency */,
			);
			name = JWTPackageTests;
			productName = JWTPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_101 /* ClaimSetTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* ClaimSetTests.swift */; };
		OBJ_102 /* CompactJSONDecoderTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* CompactJSONDecoderTests.swift */; };
		OBJ_103 /* CompactJSONEncoderTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* CompactJSONEncoderTests.swift */; };
		OBJ_104 /* IntegrationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* IntegrationTests.swift */; };
		OBJ_105 /* JWTDecodeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* JWTDecodeTests.swift */; };
		OBJ_106 /* JWTEncodeTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* JWTEncodeTests.swift */; };
		OBJ_107 /* PayloadTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* PayloadTests.swift */; };
		OBJ_109 /* JWT.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWT::Product" /* JWT.framework */; };
		OBJ_110 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_51 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* HMAC.swift */; };
		OBJ_52 /* HMACCommonCrypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* HMACCommonCrypto.swift */; };
		OBJ_53 /* JWA.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* JWA.swift */; };
		OBJ_54 /* None.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* None.swift */; };
		OBJ_61 /* HMACTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* HMACTests.swift */; };
		OBJ_62 /* NoneTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* NoneTests.swift */; };
		OBJ_64 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_71 /* Algorithm.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Algorithm.swift */; };
		OBJ_72 /* Base64.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* Base64.swift */; };
		OBJ_73 /* ClaimSet.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* ClaimSet.swift */; };
		OBJ_74 /* Claims.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Claims.swift */; };
		OBJ_75 /* CompactJSONDecoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* CompactJSONDecoder.swift */; };
		OBJ_76 /* CompactJSONEncoder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* CompactJSONEncoder.swift */; };
		OBJ_77 /* Decode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Decode.swift */; };
		OBJ_78 /* Encode.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* Encode.swift */; };
		OBJ_79 /* JOSEHeader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* JOSEHeader.swift */; };
		OBJ_80 /* JWT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* JWT.swift */; };
		OBJ_82 /* JWA.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "JWT::JWA::Product" /* JWA.framework */; };
		OBJ_89 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		E8436A5022AF956C0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		E8436A5122AF956C0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		E8436A5222AF956C0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWT";
			remoteInfo = JWT;
		};
		E8436A5322AF956C0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWA";
			remoteInfo = JWA;
		};
		E8436A5422AF956E0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWATests";
			remoteInfo = JWATests;
		};
		E8436A5522AF956E0002DCD5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "JWT::JWTTests";
			remoteInfo = JWTTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"JWT::JWA::Product" /* JWA.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = JWA.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWATests::Product" /* JWATests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = JWATests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWT::Product" /* JWT.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = JWT.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"JWT::JWTTests::Product" /* JWTTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = JWTTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_11 /* HMACCommonCrypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACCommonCrypto.swift; sourceTree = "<group>"; };
		OBJ_12 /* JWA.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWA.swift; sourceTree = "<group>"; };
		OBJ_13 /* None.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = None.swift; sourceTree = "<group>"; };
		OBJ_15 /* Algorithm.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Algorithm.swift; sourceTree = "<group>"; };
		OBJ_16 /* Base64.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Base64.swift; sourceTree = "<group>"; };
		OBJ_17 /* ClaimSet.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClaimSet.swift; sourceTree = "<group>"; };
		OBJ_18 /* Claims.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Claims.swift; sourceTree = "<group>"; };
		OBJ_19 /* CompactJSONDecoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONDecoder.swift; sourceTree = "<group>"; };
		OBJ_20 /* CompactJSONEncoder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONEncoder.swift; sourceTree = "<group>"; };
		OBJ_21 /* Decode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Decode.swift; sourceTree = "<group>"; };
		OBJ_22 /* Encode.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Encode.swift; sourceTree = "<group>"; };
		OBJ_23 /* JOSEHeader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JOSEHeader.swift; sourceTree = "<group>"; };
		OBJ_24 /* JWT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWT.swift; sourceTree = "<group>"; };
		OBJ_27 /* HMACTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* NoneTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NoneTests.swift; sourceTree = "<group>"; };
		OBJ_30 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		OBJ_31 /* ClaimSetTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ClaimSetTests.swift; sourceTree = "<group>"; };
		OBJ_32 /* CompactJSONDecoderTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONDecoderTests.swift; sourceTree = "<group>"; };
		OBJ_33 /* CompactJSONEncoderTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CompactJSONEncoderTests.swift; sourceTree = "<group>"; };
		OBJ_34 /* IntegrationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IntegrationTests.swift; sourceTree = "<group>"; };
		OBJ_35 /* JWTDecodeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWTDecodeTests.swift; sourceTree = "<group>"; };
		OBJ_36 /* JWTEncodeTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = JWTEncodeTests.swift; sourceTree = "<group>"; };
		OBJ_37 /* PayloadTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PayloadTests.swift; sourceTree = "<group>"; };
		OBJ_43 /* LICENSE */ = {isa = PBXFileReference; lastKnownFileType = text; path = LICENSE; sourceTree = "<group>"; };
		OBJ_44 /* CHANGELOG.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = CHANGELOG.md; sourceTree = "<group>"; };
		OBJ_45 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_108 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_109 /* JWT.framework in Frameworks */,
				OBJ_110 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_55 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_63 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_64 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_81 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_82 /* JWA.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_14 /* JWT */ = {
			isa = PBXGroup;
			children = (
				OBJ_15 /* Algorithm.swift */,
				OBJ_16 /* Base64.swift */,
				OBJ_17 /* ClaimSet.swift */,
				OBJ_18 /* Claims.swift */,
				OBJ_19 /* CompactJSONDecoder.swift */,
				OBJ_20 /* CompactJSONEncoder.swift */,
				OBJ_21 /* Decode.swift */,
				OBJ_22 /* Encode.swift */,
				OBJ_23 /* JOSEHeader.swift */,
				OBJ_24 /* JWT.swift */,
			);
			name = JWT;
			path = Sources/JWT;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_25 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* JWATests */,
				OBJ_29 /* JWTTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* JWATests */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* HMACTests.swift */,
				OBJ_28 /* NoneTests.swift */,
			);
			name = JWATests;
			path = Tests/JWATests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_29 /* JWTTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_30 /* Info.plist */,
				OBJ_31 /* ClaimSetTests.swift */,
				OBJ_32 /* CompactJSONDecoderTests.swift */,
				OBJ_33 /* CompactJSONEncoderTests.swift */,
				OBJ_34 /* IntegrationTests.swift */,
				OBJ_35 /* JWTDecodeTests.swift */,
				OBJ_36 /* JWTEncodeTests.swift */,
				OBJ_37 /* PayloadTests.swift */,
			);
			name = JWTTests;
			path = Tests/JWTTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_38 /* Products */ = {
			isa = PBXGroup;
			children = (
				"JWT::JWTTests::Product" /* JWTTests.xctest */,
				"JWT::JWT::Product" /* JWT.framework */,
				"JWT::JWATests::Product" /* JWATests.xctest */,
				"JWT::JWA::Product" /* JWA.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_25 /* Tests */,
				OBJ_38 /* Products */,
				OBJ_43 /* LICENSE */,
				OBJ_44 /* CHANGELOG.md */,
				OBJ_45 /* README.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* JWA */,
				OBJ_14 /* JWT */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* JWA */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* HMAC */,
				OBJ_12 /* JWA.swift */,
				OBJ_13 /* None.swift */,
			);
			name = JWA;
			path = Sources/JWA;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_9 /* HMAC */ = {
			isa = PBXGroup;
			children = (
				OBJ_10 /* HMAC.swift */,
				OBJ_11 /* HMACCommonCrypto.swift */,
			);
			path = HMAC;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"JWT::JWA" /* JWA */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_47 /* Build configuration list for PBXNativeTarget "JWA" */;
			buildPhases = (
				OBJ_50 /* Sources */,
				OBJ_55 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = JWA;
			productName = JWA;
			productReference = "JWT::JWA::Product" /* JWA.framework */;
			productType = "com.apple.product-type.framework";
		};
		"JWT::JWATests" /* JWATests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_57 /* Build configuration list for PBXNativeTarget "JWATests" */;
			buildPhases = (
				OBJ_60 /* Sources */,
				OBJ_63 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_65 /* PBXTargetDependency */,
			);
			name = JWATests;
			productName = JWATests;
			productReference = "JWT::JWATests::Product" /* JWATests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"JWT::JWT" /* JWT */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_67 /* Build configuration list for PBXNativeTarget "JWT" */;
			buildPhases = (
				OBJ_70 /* Sources */,
				OBJ_81 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_83 /* PBXTargetDependency */,
			);
			name = JWT;
			productName = JWT;
			productReference = "JWT::JWT::Product" /* JWT.framework */;
			productType = "com.apple.product-type.framework";
		};
		"JWT::JWTTests" /* JWTTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_97 /* Build configuration list for PBXNativeTarget "JWTTests" */;
			buildPhases = (
				OBJ_100 /* Sources */,
				OBJ_108 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_111 /* PBXTargetDependency */,
				OBJ_112 /* PBXTargetDependency */,
			);
			name = JWTTests;
			productName = JWTTests;
			productReference = "JWT::JWTTests::Product" /* JWTTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"JWT::SwiftPMPackageDescription" /* JWTPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_85 /* Build configuration list for PBXNativeTarget "JWTPackageDescription" */;
			buildPhases = (
				OBJ_88 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = JWTPackageDescription;
			productName = JWTPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "JWT" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_38 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"JWT::JWA" /* JWA */,
				"JWT::JWATests" /* JWATests */,
				"JWT::JWT" /* JWT */,
				"JWT::SwiftPMPackageDescription" /* JWTPackageDescription */,
				"JWT::JWTPackageTests::ProductTarget" /* JWTPackageTests */,
				"JWT::JWTTests" /* JWTTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_100 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_101 /* ClaimSetTests.swift in Sources */,
				OBJ_102 /* CompactJSONDecoderTests.swift in Sources */,
				OBJ_103 /* CompactJSONEncoderTests.swift in Sources */,
				OBJ_104 /* IntegrationTests.swift in Sources */,
				OBJ_105 /* JWTDecodeTests.swift in Sources */,
				OBJ_106 /* JWTEncodeTests.swift in Sources */,
				OBJ_107 /* PayloadTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_50 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_51 /* HMAC.swift in Sources */,
				OBJ_52 /* HMACCommonCrypto.swift in Sources */,
				OBJ_53 /* JWA.swift in Sources */,
				OBJ_54 /* None.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_60 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_61 /* HMACTests.swift in Sources */,
				OBJ_62 /* NoneTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_70 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_71 /* Algorithm.swift in Sources */,
				OBJ_72 /* Base64.swift in Sources */,
				OBJ_73 /* ClaimSet.swift in Sources */,
				OBJ_74 /* Claims.swift in Sources */,
				OBJ_75 /* CompactJSONDecoder.swift in Sources */,
				OBJ_76 /* CompactJSONEncoder.swift in Sources */,
				OBJ_77 /* Decode.swift in Sources */,
				OBJ_78 /* Encode.swift in Sources */,
				OBJ_79 /* JOSEHeader.swift in Sources */,
				OBJ_80 /* JWT.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_88 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_89 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_111 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWT" /* JWT */;
			targetProxy = E8436A5222AF956C0002DCD5 /* PBXContainerItemProxy */;
		};
		OBJ_112 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = E8436A5322AF956C0002DCD5 /* PBXContainerItemProxy */;
		};
		OBJ_65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = E8436A5122AF956C0002DCD5 /* PBXContainerItemProxy */;
		};
		OBJ_83 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWA" /* JWA */;
			targetProxy = E8436A5022AF956C0002DCD5 /* PBXContainerItemProxy */;
		};
		OBJ_94 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWATests" /* JWATests */;
			targetProxy = E8436A5422AF956E0002DCD5 /* PBXContainerItemProxy */;
		};
		OBJ_95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "JWT::JWTTests" /* JWTTests */;
			targetProxy = E8436A5522AF956E0002DCD5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_48 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWA_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWA;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWA;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_49 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWA_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWA;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWA;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_58 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWATests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWATests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_59 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWATests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWATests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_68 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWT_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWT;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWT;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_69 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWT_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = JWT;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWT;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_86 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_87 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_92 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_93 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_98 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWTTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWTTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_99 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = JWT.xcodeproj/JWTTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.13;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = JWTTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "JWT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_47 /* Build configuration list for PBXNativeTarget "JWA" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_48 /* Debug */,
				OBJ_49 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_57 /* Build configuration list for PBXNativeTarget "JWATests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_58 /* Debug */,
				OBJ_59 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_67 /* Build configuration list for PBXNativeTarget "JWT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_68 /* Debug */,
				OBJ_69 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_85 /* Build configuration list for PBXNativeTarget "JWTPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_86 /* Debug */,
				OBJ_87 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_91 /* Build configuration list for PBXAggregateTarget "JWTPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_92 /* Debug */,
				OBJ_93 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_97 /* Build configuration list for PBXNativeTarget "JWTTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_98 /* Debug */,
				OBJ_99 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
